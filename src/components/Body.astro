---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import HeroSection from './Body/HeroSection.astro';
import ServiceSection from './Body/ServiceSection.astro';
import Contact from './Body/Contact.astro';
import Whatsapp from './Whatsapp.astro';
---

  

  <HeroSection/>
  
  <!-- Efecto Parallax Divisor -->
  <div class="parallax-divider relative h-60 overflow-hidden">
    <div class="absolute inset-0 z-10 bg-gradient-to-b from-[#121212] to-transparent opacity-60"></div>
    <div class="absolute inset-0 z-10 bg-gradient-to-t from-[#f5f5f5] to-transparent opacity-60"></div>
    <div class="absolute inset-0 bg-cover bg-center bg-fixed" style="background-image: url('https://images.unsplash.com/photo-1550745165-9bc0b252726f?ixlib=rb-4.0.3&auto=format&fit=crop&q=80&w=1470'); filter: saturate(0.5) brightness(0.6);"></div>
    <div class="absolute inset-0" style="background-color: rgba(255, 20, 147, 0.2);"></div>
  </div>
  
  <ServiceSection/>

  <!-- Segunda sección de Parallax -->
  <div class="parallax-divider relative h-72 overflow-hidden">
    <div class="absolute inset-0 z-10 bg-gradient-to-b from-[#f5f5f5] to-transparent opacity-60"></div>
    <div class="absolute inset-0 z-10 bg-gradient-to-t from-[#121212] to-transparent opacity-60"></div>
    <div class="absolute inset-0 bg-cover bg-center bg-fixed" style="background-image: url('https://images.unsplash.com/photo-1581472723648-909f4851d4ae?ixlib=rb-4.0.3&auto=format&fit=crop&q=80&w=1470'); filter: saturate(0.7) brightness(0.5);"></div>
    <div class="absolute inset-0" style="background-color: rgba(255, 20, 147, 0.15);"></div>
    
    <!-- Texto sobrepuesto en parallax -->
    <div class="container mx-auto h-full flex items-center justify-center relative z-20">
      <div class="text-center" data-aos="fade-up">
        <p class="text-2xl md:text-4xl font-bold text-white max-w-xl mx-auto">
          Tecnología que <span class="text-[#ff1493]">transforma</span> la manera en que haces negocios
        </p>
      </div>
    </div>
  </div>
  
  <Contact/>
  
  
  <!-- Script para efectos de parallax -->
  <script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
      // Función para manejar el efecto parallax
      function handleParallax() {
        const parallaxElements = document.querySelectorAll('[data-depth]');
        
        window.addEventListener('scroll', function() {
          const scrollTop = window.pageYOffset;
          
          parallaxElements.forEach(element => {
            const depth = parseFloat(element.getAttribute('data-depth')) || 0.1;
            const movement = -(scrollTop * depth);
            element.style.transform = `translate3d(0, ${movement}px, 0)`;
          });
        });
      }
      
      // Función para animar la sección Hero
      function animateHero() {
        const circles = document.querySelectorAll('.parallax-circle');
        const shape = document.querySelector('.parallax-shape');
        
        let lastScrollY = window.scrollY;
        
        // Animar suavemente los elementos del hero al cargar
        if (circles.length) {
          circles.forEach((circle, index) => {
            setTimeout(() => {
              circle.style.opacity = '0.2';
            }, 300 * (index + 1));
          });
        }
        
        if (shape) {
          setTimeout(() => {
            shape.style.opacity = '0.1';
          }, 1000);
        }
        
        // Efecto de parallax en el scroll
        window.addEventListener('scroll', () => {
          const scrollY = window.scrollY;
          const scrollDirection = scrollY > lastScrollY ? 'down' : 'up';
          
          if (circles.length) {
            circles.forEach((circle, index) => {
              const speed = index % 2 === 0 ? 0.05 : 0.07;
              const offset = scrollY * speed * (index % 2 === 0 ? 1 : -1);
              circle.style.transform = `translateY(${offset}px)`;
            });
          }
          
          if (shape) {
            const rotationSpeed = 0.02;
            const rotation = scrollY * rotationSpeed;
            shape.style.transform = `rotate(${45 + rotation}deg)`;
          }
          
          lastScrollY = scrollY;
        });
      }
      
      // Inicializar efectos
      handleParallax();
      animateHero();
      
      // Suavizar el scroll al hacer clic en enlaces internos
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
          e.preventDefault();
          
          const targetId = this.getAttribute('href');
          if (!targetId || targetId === '#') return;
          
          const targetElement = document.querySelector(targetId);
          if (!targetElement) return;
          
          window.scrollTo({
            top: targetElement.offsetTop,
            behavior: 'smooth'
          });
        });
      });
    });
  </script>